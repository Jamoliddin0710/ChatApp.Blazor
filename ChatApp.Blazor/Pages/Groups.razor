@page "/groups/{GroupName}"
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http
<h1>@GroupName</h1>
@if (_messages is not null)
{
    @foreach (var item in _messages)
    {
        <p>@item</p>
    }
}

<MudTextField T="string" @bind-Value="@message"></MudTextField>
<MudButton OnClick="GetGroups">Send</MudButton>

@code {
    [Parameter]
    public string? GroupName{ get; set; }
    private string? message { get; set; }
    private  List<string>? _messages = new List<string>();
    private HubConnection? _hubConnection;
    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
        .WithUrl("https://localhost:7163/chathub")
        .Build(); // api ni blazorga ulash page ochilgan paytda connectionid generate qiladi
        _hubConnection.On<string, string>(nameof(GetMessageToGroup), GetMessageToGroup);

        await _hubConnection.StartAsync();
        // apidan getmessage keyli ma'lumotni olib GetMessage funksiyasini chaqiradi va undan kelgan string
        // typedagi messageni getmessage funksiyasiga beradi
        await _hubConnection.InvokeAsync("JoinToGroup", GroupName);
        //userni groupga qo'shish
        _messages = await Http.GetFromJsonAsync<List<string>>($"https://localhost:7163/api/Account/{GroupName}");
    }

    private void GetMessageToGroup(string username, string message)
    {
        _messages.Add($"{username}:{message}");
        StateHasChanged();
    }

    private async Task GetGroups()
    {
        //hubconnection null emasmi
        if (_hubConnection?.State == HubConnectionState.Connected)
        {
            await _hubConnection.InvokeAsync(nameof(GetGroups), GroupName, message);
            // apini SendMessage funksiyasiga hello messageni jo'natadi u esa yana Clientni hamma funksiyasiga bu xabarni jo'natadi
        }
    }
}




